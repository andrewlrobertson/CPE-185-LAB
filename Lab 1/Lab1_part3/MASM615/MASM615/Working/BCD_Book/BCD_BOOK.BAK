;JIAO JING HUANG
;BANKING PROGRAM
;========================================================
.8086
;========================================================
SSEG SEGMENT STACK
	DB 32 DUP (?)		  ;32 BYTE FOR STACK
SSEG ENDS
;========================================================
DSEG SEGMENT
ORG 0202H
BUFF DB 3 DUP (?)		   ;8 BYTE INPUT BUFFER
DSEG ENDS
;========================================================
CSEG SEGMENT 'CODE'
ASSUME CS:CSEG, DS:DSEG, SS:SSEG
ORG 100H
;========================================================
MAIN: CALL CLEARSCREEN		;CLEAR SCREEN
      MOV AH, 09H
      MOV DX, OFFSET WELCOME	;DISPLAY WELCOME MSG
      INT 21H			; CALL DOS
      MOV DX, OFFSET PINMSG	;ASK USER TO ENTER THEIR PIN
      INT 21H			;CALL DOS
      MOV DX, OFFSET BALANCEAMT ;ASK USER TO ENTER CURRENT BALANCE
      INT 21H			;CALL DOS
      MOV AX, [0202]		;GET ADDRESS OF DATA SEGMENT
      MOV DS, AX		;AND STORE IN DS
      LEA DX, BUFF		;POINT DX AT INPUT BUFFER
      MOV AH, 0AH		;DOS FUNCTION 0AH
      MOV SI, DX		;POINT SI AT INPUT BUFFER
      MOV BYTE PTR [SI], 3H	;3 BYTE BUFFER
      INT 21H			;GET THE TWO NUMBER
      MOV AH, 0EH		;BIOS VIDEO SERVICE
      MOV AL, 0AH		;ASCII LINE FEED
      INT 10H
      SUB BYTE PTR [SI+2], 30H	;COVERT EACH DIGIT TO BCD
      SUB BYTE PTR [SI+3], 30H
      MOV CL, 4
      ROL BYTE PTR [SI+3], CL
      ROR WORD PTR [SI+2], CL
      MOV AL, [SI+3]		;FETCH FIRST BCD NUMBER
      MOV BL, AL		;STORE CHECK AMT IN BL
      ;MOV AH, 09H
      ;MOV DX, OFFSET CHECKAMT
      ;INT 21H
      POP DX
      MOV AX, [0202]		;GET ADDRESS OF DATA SEGMENT
      MOV DS, AX		;AND STORE IN DS
      LEA DX, BUFF		;POINT DX AT INPUT BUFFER
      MOV AH, 0AH		;DOS FUNCTION 0AH
      MOV SI, DX		;POINT SI AT INPUT BUFFER
      MOV BYTE PTR [SI], 3H	;3 BYTE BUFFER
      INT 21H			;GET THE TWO NUMBER
      MOV AH, 0EH		;BIOS VIDEO SERVICE
      MOV AL, 0AH		;ASCII LINE FEED
      INT 10H
      SUB BYTE PTR [SI+2], 30H	;COVERT EACH DIGIT TO BCD
      SUB BYTE PTR [SI+3], 30H
      MOV CL, 4
      ROL BYTE PTR [SI+3], CL
      ROR WORD PTR [SI+2], CL
      MOV AL, [SI+3]		;FETCH SECOND BCD NUMBER
FCN:  CMP BL, AL		;COMPARE CHECK AMT TO BALANCE AMT
      JG OVERDRAFT		;JUMP TO OVERDRAFT FUNCTION IF CHECK IS GREATER THAN BALANCE
      SUB BL, AL		;SUBTRACT CHECK AMT FROM BALANCE AFTER OVERDRAFT ADDED
      DAA			;KEEP RESULT IN DECIMAL
      ;MOV BH, BL		;SAVE RESULT
      JNC IIIB			;JUMP IF NO CARRY
      MOV AL, 1 		;IF THERE IS A CARRY, ADD 1 TO AL
      CALL DSPY 		;CALL DISPLAY FUNCTION
IIIB: MOV DX, OFFSET NEWBALANCE
      INT 21H
      MOV AL, BL
      CALL DSPY
      ;MOV AH, 09H
      ;MOV DX, OFFSET LOOPAGAIN
      ;INT 21H
      MOV AH, 00H	    ;READ IN A CHARACTER
      INT 16H		    ;CALL DOS
      MOV BL, AL
      MOV AH, 0EH
      INT 10H
      MOV AL, BL
      CMP AL, 5AH	    ;COMPARE AL TO 'Y'
      JZ MAIN
      MOV AH, 4CH
      INT 21H
OVERDRAFT PROC
    ADD	BL, 20H
    JMP FCN
    RET
OVERDRAFT ENDP
;========================================================
CLEARSCREEN PROC
    MOV AX, 0002H
    INT 10H
    MOV DX, 0000H
    MOV BH, 0H
    INT 10H
    RET
CLEARSCREEN ENDP
;========================================================
DSPY PROC	;DISPLAY RESULT TO THE SCREEN
     MOV BL, AL
     AND AL, 0F0H
     MOV CL, 4
     ROR AL, CL
     ADD AL, 30H
     MOV AH, 0EH
     INT 10H
     MOV AL, BL
     AND AL, 0FH
     ADD AL, 30H
     INT 10H
RET 
DSPY ENDP
;========================================================
ORG 0300H
BALANCEAMT DB "PLEASE ENTER THE CURRENT BALANCE IN YOUR ACCOUNT", 0DH, 0AH, 24H
CHECKAMT DB "PLEASE ENTER THE CHECK AMOUNT", 0DH, 0AH, 24H
WELCOME DB "WELCOME TO JIAOJING'S BANKING SYSTEM", 0DH, 0AH, 24H
PINMSG DB "PLEASE ENTER YOU 6 DIGIT PASSWORD", 0DH, 0AH, 24H
LOOPAGAIN DB "DO YOU WISH TO HAVE ANOTHER TRANSACTION? (Y/N):", 0DH, 0AH, 24H
NEWBALANCE DB "YOUR CURRENT BALANCE IS : ", 0DH, 0AH,13H,10H, 24H
CSEG ENDS
END MAIN
